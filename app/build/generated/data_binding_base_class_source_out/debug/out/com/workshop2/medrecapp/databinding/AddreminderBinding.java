// Generated by view binder compiler. Do not edit!
package com.workshop2.medrecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.workshop2.medrecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddreminderBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout containerAddReminder;

  @NonNull
  public final FrameLayout containerDelete;

  @NonNull
  public final FrameLayout containerGroup;

  @NonNull
  public final FrameLayout containerIphoneProX;

  @NonNull
  public final FrameLayout containerLogin;

  @NonNull
  public final FrameLayout containerSearchBar;

  @NonNull
  public final FrameLayout containerSearchBar1;

  @NonNull
  public final FrameLayout containerStatusBar;

  @NonNull
  public final ImageView imageArrowLeft;

  @NonNull
  public final ImageView imageBattery;

  @NonNull
  public final ImageView imageGroupRectangle;

  @NonNull
  public final ImageView imageMainRectangle;

  @NonNull
  public final ImageView imageNetworkWifi;

  @NonNull
  public final ImageView imageRb;

  @NonNull
  public final ImageView imageSearchIcon;

  @NonNull
  public final ImageView imageSearchRectangle;

  @NonNull
  public final ImageView imageSearchRectangle1;

  @NonNull
  public final Button imgLoginBox;

  @NonNull
  public final TextView textAddYourMed;

  @NonNull
  public final TextView textButtonNext;

  @NonNull
  public final TextView textMedsQuestion;

  @NonNull
  public final TextView textSearchMedicine;

  private AddreminderBinding(@NonNull FrameLayout rootView,
      @NonNull FrameLayout containerAddReminder, @NonNull FrameLayout containerDelete,
      @NonNull FrameLayout containerGroup, @NonNull FrameLayout containerIphoneProX,
      @NonNull FrameLayout containerLogin, @NonNull FrameLayout containerSearchBar,
      @NonNull FrameLayout containerSearchBar1, @NonNull FrameLayout containerStatusBar,
      @NonNull ImageView imageArrowLeft, @NonNull ImageView imageBattery,
      @NonNull ImageView imageGroupRectangle, @NonNull ImageView imageMainRectangle,
      @NonNull ImageView imageNetworkWifi, @NonNull ImageView imageRb,
      @NonNull ImageView imageSearchIcon, @NonNull ImageView imageSearchRectangle,
      @NonNull ImageView imageSearchRectangle1, @NonNull Button imgLoginBox,
      @NonNull TextView textAddYourMed, @NonNull TextView textButtonNext,
      @NonNull TextView textMedsQuestion, @NonNull TextView textSearchMedicine) {
    this.rootView = rootView;
    this.containerAddReminder = containerAddReminder;
    this.containerDelete = containerDelete;
    this.containerGroup = containerGroup;
    this.containerIphoneProX = containerIphoneProX;
    this.containerLogin = containerLogin;
    this.containerSearchBar = containerSearchBar;
    this.containerSearchBar1 = containerSearchBar1;
    this.containerStatusBar = containerStatusBar;
    this.imageArrowLeft = imageArrowLeft;
    this.imageBattery = imageBattery;
    this.imageGroupRectangle = imageGroupRectangle;
    this.imageMainRectangle = imageMainRectangle;
    this.imageNetworkWifi = imageNetworkWifi;
    this.imageRb = imageRb;
    this.imageSearchIcon = imageSearchIcon;
    this.imageSearchRectangle = imageSearchRectangle;
    this.imageSearchRectangle1 = imageSearchRectangle1;
    this.imgLoginBox = imgLoginBox;
    this.textAddYourMed = textAddYourMed;
    this.textButtonNext = textButtonNext;
    this.textMedsQuestion = textMedsQuestion;
    this.textSearchMedicine = textSearchMedicine;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddreminderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddreminderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.addreminder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddreminderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container_add_reminder;
      FrameLayout containerAddReminder = ViewBindings.findChildViewById(rootView, id);
      if (containerAddReminder == null) {
        break missingId;
      }

      FrameLayout containerDelete = (FrameLayout) rootView;

      id = R.id.container_group;
      FrameLayout containerGroup = ViewBindings.findChildViewById(rootView, id);
      if (containerGroup == null) {
        break missingId;
      }

      id = R.id.container_iphone_pro_x;
      FrameLayout containerIphoneProX = ViewBindings.findChildViewById(rootView, id);
      if (containerIphoneProX == null) {
        break missingId;
      }

      id = R.id.container_login;
      FrameLayout containerLogin = ViewBindings.findChildViewById(rootView, id);
      if (containerLogin == null) {
        break missingId;
      }

      id = R.id.container_search_bar;
      FrameLayout containerSearchBar = ViewBindings.findChildViewById(rootView, id);
      if (containerSearchBar == null) {
        break missingId;
      }

      id = R.id.container_search_bar1;
      FrameLayout containerSearchBar1 = ViewBindings.findChildViewById(rootView, id);
      if (containerSearchBar1 == null) {
        break missingId;
      }

      id = R.id.container_status_bar;
      FrameLayout containerStatusBar = ViewBindings.findChildViewById(rootView, id);
      if (containerStatusBar == null) {
        break missingId;
      }

      id = R.id.image_arrow_left;
      ImageView imageArrowLeft = ViewBindings.findChildViewById(rootView, id);
      if (imageArrowLeft == null) {
        break missingId;
      }

      id = R.id.image_battery;
      ImageView imageBattery = ViewBindings.findChildViewById(rootView, id);
      if (imageBattery == null) {
        break missingId;
      }

      id = R.id.image_group_rectangle;
      ImageView imageGroupRectangle = ViewBindings.findChildViewById(rootView, id);
      if (imageGroupRectangle == null) {
        break missingId;
      }

      id = R.id.image_main_rectangle;
      ImageView imageMainRectangle = ViewBindings.findChildViewById(rootView, id);
      if (imageMainRectangle == null) {
        break missingId;
      }

      id = R.id.image_network_wifi;
      ImageView imageNetworkWifi = ViewBindings.findChildViewById(rootView, id);
      if (imageNetworkWifi == null) {
        break missingId;
      }

      id = R.id.image_rb;
      ImageView imageRb = ViewBindings.findChildViewById(rootView, id);
      if (imageRb == null) {
        break missingId;
      }

      id = R.id.image_search_icon;
      ImageView imageSearchIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageSearchIcon == null) {
        break missingId;
      }

      id = R.id.image_search_rectangle;
      ImageView imageSearchRectangle = ViewBindings.findChildViewById(rootView, id);
      if (imageSearchRectangle == null) {
        break missingId;
      }

      id = R.id.image_search_rectangle1;
      ImageView imageSearchRectangle1 = ViewBindings.findChildViewById(rootView, id);
      if (imageSearchRectangle1 == null) {
        break missingId;
      }

      id = R.id.img_login_box;
      Button imgLoginBox = ViewBindings.findChildViewById(rootView, id);
      if (imgLoginBox == null) {
        break missingId;
      }

      id = R.id.text_add_your_med;
      TextView textAddYourMed = ViewBindings.findChildViewById(rootView, id);
      if (textAddYourMed == null) {
        break missingId;
      }

      id = R.id.text_button_next;
      TextView textButtonNext = ViewBindings.findChildViewById(rootView, id);
      if (textButtonNext == null) {
        break missingId;
      }

      id = R.id.text_meds_question;
      TextView textMedsQuestion = ViewBindings.findChildViewById(rootView, id);
      if (textMedsQuestion == null) {
        break missingId;
      }

      id = R.id.text_search_medicine;
      TextView textSearchMedicine = ViewBindings.findChildViewById(rootView, id);
      if (textSearchMedicine == null) {
        break missingId;
      }

      return new AddreminderBinding((FrameLayout) rootView, containerAddReminder, containerDelete,
          containerGroup, containerIphoneProX, containerLogin, containerSearchBar,
          containerSearchBar1, containerStatusBar, imageArrowLeft, imageBattery,
          imageGroupRectangle, imageMainRectangle, imageNetworkWifi, imageRb, imageSearchIcon,
          imageSearchRectangle, imageSearchRectangle1, imgLoginBox, textAddYourMed, textButtonNext,
          textMedsQuestion, textSearchMedicine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
